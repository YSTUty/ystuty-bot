export const getWeekNumber = (date: Date = new Date()) => {
  const d = new Date(
    Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()),
  );

  d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));

  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1)).getTime();

  const weekNo = Math.ceil(((d.getTime() - yearStart) / 86400000 + 1) / 7);

  return weekNo;
};

export const getWeekOffsetByYear = (currentDate: Date = new Date()) => {
  const currentYear = currentDate.getFullYear();
  const currentWeek = getWeekNumber(currentDate);

  const firstSeptemberDate = new Date(currentYear, 8, 1);
  // // TODO?: –Ω–∞–¥–æ –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å (–ø–æ–¥–∫—Ä—É—Ç–∏—Ç—å –¥–µ–Ω—å/–¥–≤–∞), –µ—Å–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å?
  // * –£—á–∏—Ç—ã–≤–∞–µ–º, –µ—Å–ª–∏ 1 —Å–µ–Ω—Ç—è–±—Ä—è –≤—ã–ø–∞–ª–æ –Ω–∞ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
  // ? –∞ –µ—Å–ª–∏ –Ω–∞ –°—É–±–±–æ—Ç—É?..
  if (firstSeptemberDate.getDay() === 0) {
    firstSeptemberDate.setDate(firstSeptemberDate.getDate() + 1);
  }
  const firstSeptemberWeek = getWeekNumber(firstSeptemberDate);

  // console.log('Weeker', {
  //   currentYear,
  //   currentWeek,
  //   firstSeptemberWeek,
  // });
  // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–∏ —Å–µ–Ω—Ç—è–±—Ä—è
  if (currentWeek > firstSeptemberWeek - 1) {
    return firstSeptemberWeek - 1;
  }

  const firstFebruaryDate = new Date(currentYear, 1, 1);
  // TODO?: –Ω–∞–¥–æ –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å (–ø–æ–¥–∫—Ä—É—Ç–∏—Ç—å –¥–µ–Ω—å/–¥–≤–∞), –µ—Å–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å?
  const firstFebruaryWeek = getWeekNumber(firstFebruaryDate);
  // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è –º–µ–Ω—å—à–µ –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–∏ —Ñ–µ–≤—Ä–∞–ª—è (–∑–Ω–∞—á–∏—Ç —Ñ–∏–∫—Å–∏–º –ø—Ä–æ—à–ª–æ–≥–æ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é)
  if (currentWeek < firstFebruaryWeek) {
    const prevYear = currentYear - 1;
    // TODO?: –Ω–∞–¥–æ –ª–∏ —É—á–∏—Ç—ã–≤–∞—Ç—å (–ø–æ–¥–∫—Ä—É—Ç–∏—Ç—å –¥–µ–Ω—å/–¥–≤–∞), –µ—Å–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å?
    const firstSeptemberPrevYearDate = new Date(prevYear, 8, 1);
    const lastPrevYearDate = new Date(prevYear, 11, 31);

    // console.log('Weeker...', {
    //   firstSeptemberPrevYearDate: firstSeptemberPrevYearDate.toISOString(),
    //   lastPrevYearDate: lastPrevYearDate.toISOString(),
    //   lastPrevYearWeek: getWeekNumber(lastPrevYearDate),
    //   firstSeptemberPrevYearWeek: getWeekNumber(firstSeptemberPrevYearDate),
    // });

    return -(
      getWeekNumber(lastPrevYearDate) -
      getWeekNumber(firstSeptemberPrevYearDate) +
      1
    );
  }

  // –ü–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è —Ñ–µ–≤—Ä–∞–ª—è
  return firstFebruaryWeek;
};

export function getTimez(startTime: string, durationMinutes = 90) {
  const padTime = (time: number) => time.toString().padStart(2, '0');

  const dateTime = new Date(0);

  const [hours, minutes] = startTime.split(':').map(Number);
  dateTime.setHours(hours, minutes);
  dateTime.setMinutes(dateTime.getMinutes() + durationMinutes);

  const endTime = `${padTime(dateTime.getHours())}:${padTime(
    dateTime.getMinutes(),
  )}`;

  // for safe
  dateTime.setHours(hours, minutes);
  startTime = `${padTime(dateTime.getHours())}:${padTime(
    dateTime.getMinutes(),
  )}`;

  return `${startTime}-${endTime}`;
}

export function short2Long2(e: number, q: 0 | 1 | 2 = 0) {
  switch (e) {
    case 0:
      return q === 0 ? 'üìï' : q === 1 || q === 2 ? '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫' : null;
    case 1:
      return q === 0 ? 'üìó' : q === 1 || q === 2 ? '–í—Ç–æ—Ä–Ω–∏–∫' : null;
    case 2:
      return q === 0 ? 'üìò' : q === 1 ? '–°—Ä–µ–¥–∞' : q === 2 ? '–°—Ä–µ–¥—É' : null;
    case 3:
      return q === 0 ? 'üìô' : q === 1 || q === 2 ? '–ß–µ—Ç–≤–µ—Ä–≥' : null;
    case 4:
      return q === 0 ? 'üìì' : q === 1 ? '–ü—è—Ç–Ω–∏—Ü–∞' : q === 2 ? '–ü—è—Ç–Ω–∏—Ü—É' : null;
    case 5:
      return q === 0 ? 'üìî' : q === 1 ? '–°—É–±–±–æ—Ç–∞' : q === 2 ? '–°—É–±–±–æ—Ç—É' : null;
    case 6:
      return q === 0 ? 'üìï' : q === 1 || q === 2 ? '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ' : null;
  }
}

export function getNumberEmoji(i: number) {
  switch (i % 10) {
    case 0:
      return '0‚É£';
    case 1:
      return '1‚É£';
    case 2:
      return '2‚É£';
    case 3:
      return '3‚É£';
    case 4:
      return '4‚É£';
    case 5:
      return '5‚É£';
    case 6:
      return '6‚É£';
    case 7:
      return '7‚É£';
    case 8:
      return '8‚É£';
    case 9:
      return '9‚É£';
  }
}
